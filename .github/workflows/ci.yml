name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pre-commit
      - name: Lint (ruff)
        run: |
          ruff --version
          ruff check . --fix
          ruff check .
      - name: Format check (black)
        run: |
          black --version
          black --check . || (echo "\nFormatting differences detected by Black (showing diff):\n" && black --diff --color . && exit 1)
      - name: Collect Black diff
        if: always()
        run: |
          black --diff . > black.diff || true
      - name: Comment Black diff on PR
        if: ${{ github.event_name == 'pull_request' && failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const diffPath = 'black.diff';
            let diff = '';
            try {
              diff = fs.readFileSync(diffPath, 'utf8');
            } catch (e) {
              core.info('No black.diff file to report.');
            }
            diff = (diff || '').trim();
            if (!diff) {
              core.info('Empty Black diff; skipping PR comment.');
              return;
            }
            const truncated = diff.length > 60000 ? diff.slice(0, 60000) + '\n...\n(truncated)' : diff;
            const issue_number = context.payload.pull_request.number;
            const body = `Black found formatting differences on this PR.\n\n<details>\n<summary>Show diff</summary>\n\n\`\`\`\n${truncated}\n\`\`\`\n\n</details>`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body,
            });
      - name: Pre-commit (optional)
        if: always()
        run: |
          pre-commit --version
          pre-commit run --all-files || true
      - name: Run tests
        run: |
          pytest -q
